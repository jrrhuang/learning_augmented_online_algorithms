from abc import abstractmethod


class AbstractAlgorithm:
    """
    Online threshold-based algorithms (OTA) are a class of reserve-and-greedy
    algorithms, which use a threshold function to determine the amount of
    resources that need to be reserved, while the rest can be greedily
    allocated. This abstract class provides the skeleton for the one-max-search
    and one-way-trading algorithms that use their respective threshold
    functions. Given a training instance, it allocates resources in the manner
    described above to generate the maximum profit.
    """
    def __init__(self):
        """
        Initialize threshold function used to determine resource allocation at
        each time step. Starting resource amount (w) is set to 0.0, with 1.0 as
        the maximum.
        """
        self.w = 0.0
        pass
    
    @abstractmethod
    def allocate(self, instance):
        """
        Runs algorithm on an instance of data, allocating resources to maximize
        profit.

        Arguments:
        instance : pd.Series
            - array of time-series prices, for example, one week of BTC prices

        Returns: result (dictionary)
        - result['allocation'] : list showing allocation at each time step, should
            sum up to 1.0, the total amount allowed to be allocated
        - result['profit'] : profit generated by the algorithm
        """
        pass
